# docker-compose.yml
version: '3.8'

services:
  scraper:
    build: .
    container_name: puppeteer-scraper
    restart: unless-stopped
    
    # Very restrictive resource limits to prevent fork errors
    deploy:
      resources:
        limits:
          memory: 768M        # Reduced from 1G
          cpus: '0.3'         # Reduced from 0.5
        reservations:
          memory: 384M        # Reduced from 512M
          cpus: '0.15'        # Reduced from 0.25
    
    # Memory limits (critical for preventing resource errors)
    mem_limit: 768m           # Hard limit
    memswap_limit: 768m       # No swap
    mem_swappiness: 0         # Disable swap
    oom_kill_disable: false   # Allow OOM killer
    
    # Very restrictive process limits (key to fixing fork error)
    ulimits:
      nproc: 256              # Reduced from 512 (max processes)
      nofile: 1024            # File descriptors
      memlock: 33554432       # 32MB memory lock
      core: 0                 # No core dumps
    
    # Shared memory size (important for Chrome, but reduced)
    shm_size: 128m            # Reduced from 256m
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Environment variables
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=384  # Reduced
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
      - LOGIN_EMAIL=${LOGIN_EMAIL}
      - LOGIN_PASSWORD=${LOGIN_PASSWORD}
    
    # Port mapping
    ports:
      - "9000:9000"
    
    # Volume for data persistence
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 45s
      timeout: 10s
      retries: 2
      start_period: 15s

  # Optional: Add a system monitor for debugging
  monitor:
    image: node:18-slim
    container_name: system-monitor
    command: >
      bash -c "
        while true; do
          echo '=== System Resources $(date) ==='
          echo 'Memory:'
          cat /proc/meminfo | grep -E 'MemTotal|MemAvailable|MemFree'
          echo 'Processes:'
          ps aux | wc -l
          echo 'Chrome processes:'
          ps aux | grep -i chrome | grep -v grep | wc -l || echo '0'
          echo '=================================='
          sleep 30
        done
      "
    volumes:
      - /proc:/host/proc:ro
    restart: unless-stopped
    profiles: ["debug"]  # Only start with --profile debug